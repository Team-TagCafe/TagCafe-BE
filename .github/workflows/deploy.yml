name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Generate .env file
        run: |
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> .env
          echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> .env
          echo "SECURITY_JWT_SECRET=${{ secrets.SECURITY_JWT_SECRET }}" >> .env
          echo "DB_URL=${{ secrets.DB_URL }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env

      - name: Create application.yml
        run: |
          mkdir -p src/main/resources
          echo "spring:" > src/main/resources/application.yml
          echo "  datasource:" >> src/main/resources/application.yml
          echo "    url: ${{ secrets.DB_URL }}" >> src/main/resources/application.yml
          echo "    username: ${{ secrets.DB_USERNAME }}" >> src/main/resources/application.yml
          echo "    password: ${{ secrets.DB_PASSWORD }}" >> src/main/resources/application.yml
          echo "    driver-class-name: com.mysql.cj.jdbc.Driver" >> src/main/resources/application.yml
          echo "  jpa:" >> src/main/resources/application.yml
          echo "    hibernate:" >> src/main/resources/application.yml
          echo "      ddl-auto: update" >> src/main/resources/application.yml
          echo "    show-sql: true" >> src/main/resources/application.yml
          echo "    properties:" >> src/main/resources/application.yml
          echo "      hibernate:" >> src/main/resources/application.yml
          echo "        format_sql: true" >> src/main/resources/application.yml
          echo "        dialect: org.hibernate.dialect.MySQL8Dialect" >> src/main/resources/application.yml
          echo "  security:" >> src/main/resources/application.yml
          echo "    jwt:" >> src/main/resources/application.yml
          echo "      secret: ${{ secrets.SECURITY_JWT_SECRET }}" >> src/main/resources/application.yml
          echo "    oauth2:" >> src/main/resources/application.yml
          echo "      client:" >> src/main/resources/application.yml
          echo "        registration:" >> src/main/resources/application.yml
          echo "          kakao:" >> src/main/resources/application.yml
          echo "            client-id: ${{ secrets.KAKAO_CLIENT_ID }}" >> src/main/resources/application.yml
          echo "            redirect-uri: ${{ secrets.KAKAO_REDIRECT_URI }}" >> src/main/resources/application.yml
          echo "            authorization-grant-type: authorization_code" >> src/main/resources/application.yml
          echo "            client-authentication-method: client_secret_post" >> src/main/resources/application.yml
          echo "            scope: profile_nickname, profile_image, account_email" >> src/main/resources/application.yml
          echo "        provider:" >> src/main/resources/application.yml
          echo "          kakao:" >> src/main/resources/application.yml
          echo "            authorization-uri: https://kauth.kakao.com/oauth/authorize" >> src/main/resources/application.yml
          echo "            token-uri: https://kauth.kakao.com/oauth/token" >> src/main/resources/application.yml
          echo "            user-info-uri: https://kapi.kakao.com/v2/user/me" >> src/main/resources/application.yml
          echo "            user-name-attribute: id" >> src/main/resources/application.yml
          echo "logging:" >> src/main/resources/application.yml
          echo "  level:" >> src/main/resources/application.yml
          echo "    root: DEBUG" >> src/main/resources/application.yml
          echo "    org.springframework: DEBUG" >> src/main/resources/application.yml
          echo "    com.Minjin.TagCafe: DEBUG" >> src/main/resources/application.yml

      - name: Build jar
        run: ./gradlew clean bootJar -x test

      - name: Check built jar exists
        run: ls -al build/libs

      - name: Copy jar to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: build/libs/TagCafe-0.0.1-SNAPSHOT.jar
          target: /home/ec2-user/app
          strip_components: 2

      - name: Copy .env to EC2
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          source: .env
          target: /home/ec2-user/app

      - name: Run app on EC2
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          script: |
            pkill -f 'jar' || true
            cd /home/ec2-user/app
            nohup java \
              -Dspring.datasource.url=${{ secrets.DB_URL }} \
              -Dspring.datasource.username=${{ secrets.DB_USERNAME }} \
              -Dspring.datasource.password=${{ secrets.DB_PASSWORD }} \
              -Dsecurity.jwt.secret=${{ secrets.SECURITY_JWT_SECRET }} \
              -Dkakao.client-id=${{ secrets.KAKAO_CLIENT_ID }} \
              -Dkakao.redirect-uri=${{ secrets.KAKAO_REDIRECT_URI }} \
              -jar TagCafe-0.0.1-SNAPSHOT.jar > app.log 2>&1 &